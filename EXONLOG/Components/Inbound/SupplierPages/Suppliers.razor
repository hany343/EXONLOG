@page "/suppliers"
@inject SupplierService SupplierService
@using EXONLOG.Model.Inbound
 
<h3>Manage Suppliers</h3>

<!-- Search Bar -->
<div class="mb-3">
    <input @bind="searchTerm" placeholder="Search suppliers..." class="form-control" />
</div>

<!-- Add Supplier Button -->
<button @onclick="ToggleAddForm" class="btn btn-primary mb-3">
    @(showAddForm ? "Cancel" : "Add Supplier")
</button>

<!-- Add Supplier Form -->
@if (showAddForm)
{
    <EditForm Model="@newSupplier" OnValidSubmit="AddSupplier">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label>Name</label>
            <InputText @bind-Value="newSupplier.SupplierName" class="form-control" />
        </div>

        <div class="form-group">
            <label>Address</label>
            <InputText @bind-Value="newSupplier.Address" class="form-control" />
        </div>

        <div class="form-group">
            <label>Contact Number</label>
            <InputText @bind-Value="newSupplier.ContactNumber" class="form-control" />
        </div>

        <div class="form-group">
            <label>Email</label>
            <InputText @bind-Value="newSupplier.Email" class="form-control" />
        </div>

        <div class="form-group">
            <label>Notes</label>
            <InputTextArea @bind-Value="newSupplier.Notes" class="form-control" />
        </div>

        <button type="submit" class="btn btn-success">Save</button>
    </EditForm>
}

<!-- Suppliers Table -->
<table class="table">
    <thead>
        <tr>
            <th>Name</th>
            <th>Contact</th>
            <th>Email</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var supplier in suppliers)
        {
            <tr>
                <td>@supplier.SupplierName</td>
                <td>@supplier.ContactNumber</td>
                <td>@supplier.Email</td>
                <td>
                    <button @onclick="() => ShowEditForm(supplier)" class="btn btn-warning">Edit</button>
                    <button @onclick="() => ShowDetails(supplier)" class="btn btn-info">Details</button>
                    <button @onclick="() => DeleteSupplier(supplier.ID)" class="btn btn-danger">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Edit Form Modal -->
@if (showEditForm)
{
    <div class="modal" style="display:block; background: rgba(0,0,0,0.5);">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Edit Supplier</h5>
                    <button @onclick="CloseEditForm" class="close">&times;</button>
                </div>
                <div class="modal-body">
                    <EditForm Model="@selectedSupplier" OnValidSubmit="UpdateSupplier">
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <div class="form-group">
                            <label>Name</label>
                            <InputText @bind-Value="selectedSupplier.SupplierName" class="form-control" />
                        </div>

                        <div class="form-group">
                            <label>Address</label>
                            <InputText @bind-Value="selectedSupplier.Address" class="form-control" />
                        </div>

                        <div class="form-group">
                            <label>Contact Number</label>
                            <InputText @bind-Value="selectedSupplier.ContactNumber" class="form-control" />
                        </div>

                        <div class="form-group">
                            <label>Email</label>
                            <InputText @bind-Value="selectedSupplier.Email" class="form-control" />
                        </div>

                        <div class="form-group">
                            <label>Notes</label>
                            <InputTextArea @bind-Value="selectedSupplier.Notes" class="form-control" />
                        </div>

                        <button type="submit" class="btn btn-success">Update</button>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
}

<!-- Details Modal -->
@if (showDetails)
{
    <div class="modal" style="display:block; background: rgba(0,0,0,0.5);">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Supplier Details</h5>
                    <button @onclick="CloseDetails" class="close">&times;</button>
                </div>
                <div class="modal-body">
                    <p><strong>Name:</strong> @selectedSupplier.SupplierName</p>
                    <p><strong>Address:</strong> @selectedSupplier.Address</p>
                    <p><strong>Contact:</strong> @selectedSupplier.ContactNumber</p>
                    <p><strong>Email:</strong> @selectedSupplier.Email</p>
                    <p><strong>Notes:</strong> @selectedSupplier.Notes</p>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private List<Supplier> suppliers = new();
    private string searchTerm = string.Empty;
    private bool showAddForm = false;
    private bool showEditForm = false;
    private bool showDetails = false;
    private Supplier newSupplier = new();
    private Supplier selectedSupplier = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadSuppliers();
    }

    private async Task LoadSuppliers()
    {
        suppliers = await SupplierService.GetSuppliersAsync(searchTerm);
    }

    private void ToggleAddForm()
    {
        showAddForm = !showAddForm;
        if (showAddForm) newSupplier = new();
    }

    private async Task AddSupplier()
    {
        newSupplier.UserID = 1;
        await SupplierService.AddSupplierAsync(newSupplier);
        await LoadSuppliers();
        showAddForm = false;
    }

    private void ShowEditForm(Supplier supplier)
    {
        selectedSupplier = supplier;
        showEditForm = true;
    }

    private async Task UpdateSupplier()
    {
        await SupplierService.UpdateSupplierAsync(selectedSupplier);
        await LoadSuppliers();
        showEditForm = false;
    }

    private void CloseEditForm()
    {
        showEditForm = false;
    }

    private void ShowDetails(Supplier supplier)
    {
        selectedSupplier = supplier;
        showDetails = true;
    }

    private void CloseDetails()
    {
        showDetails = false;
    }

    private async Task DeleteSupplier(int id)
    {
        await SupplierService.DeleteSupplierAsync(id);
        await LoadSuppliers();
    }
}