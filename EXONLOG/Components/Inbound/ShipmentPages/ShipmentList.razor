@using EXONLOG.Model.Inbound

<div class="table-responsive">
    <table class="table table-hover table-striped">
        <thead class="table-dark">
            <tr>
                <th>Shipment ID</th>
                <th>Shipment Name</th>
                <th>Material</th>
                <th>Quantity</th>
                <th>Supplier</th>
                <th>Status</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (Shipments == null)
            {
                <tr><td colspan="7" class="text-center">Loading...</td></tr>
            }
            else if (!Shipments.Any())
            {
                <tr><td colspan="7" class="text-center">No shipments found</td></tr>
            }
            else
            {
                @foreach (var shipment in Shipments)
                {
                    <tr>
                        <td>@shipment.ShipmentID</td>
                        <td>@shipment.ShipmentName</td>
                        <td>@shipment.Material?.MaterialName</td>
                        <td>@shipment.Quantity.ToString("N2")</td>
                        <td>@shipment.Supplier?.SupplierName</td>
                        <td>@shipment.ShipmentStatus</td>
                        <td>
                            <button class="btn btn-sm btn-warning me-2" @onclick="() => OnEdit.InvokeAsync(shipment)">
                                <i class="bi bi-pencil"></i>
                            </button>
                            <button class="btn btn-sm btn-info me-2" @onclick="() => OnDetails.InvokeAsync(shipment)">
                                <i class="bi bi-eye"></i>
                            </button>
                            <button class="btn btn-sm btn-danger" @onclick="() => OnDelete.InvokeAsync(shipment.ShipmentID)">
                                <i class="bi bi-trash"></i>
                            </button>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

@code {
    [Parameter] public List<Shipment> Shipments { get; set; }
    [Parameter] public EventCallback<Shipment> OnEdit { get; set; }
    [Parameter] public EventCallback<Shipment> OnDetails { get; set; }
    [Parameter] public EventCallback<int> OnDelete { get; set; }
}