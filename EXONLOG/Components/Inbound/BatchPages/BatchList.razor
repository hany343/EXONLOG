@using EXONLOG.Model.Inbound

<div class="table-responsive">
    <table class="table table-hover table-striped">
        <thead class="table-dark">
            <tr>
                <th>Batch Number</th>
                <th>Shipment</th>
                <th>Material</th>
                <th>Quantity</th>
                <th>Created Date</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (Batches == null)
            {
                <tr><td colspan="6" class="text-center">Loading...</td></tr>
            }
            else if (!Batches.Any())
            {
                <tr><td colspan="6" class="text-center">No batches found</td></tr>
            }
            else
            {
                @foreach (var batch in Batches)
                {
                    <tr>
                        <td>@batch.BatchNumber</td>
                        <td>@batch.Shipment?.ShipmentName</td>
                        <td>@batch.Shipment?.Material?.MaterialName</td>
                        <td>@batch.Quantity.ToString("N2")</td>
                        <td>@batch.CreateDate.ToString("dd MMM yyyy")</td>
                        <td>
                            <button class="btn btn-sm btn-warning me-2"
                                    @onclick="() => OnEdit.InvokeAsync(batch)">
                                <i class="bi bi-pencil"></i>
                            </button>
                            <button class="btn btn-sm btn-info me-2"
                                    @onclick="() => OnDetails.InvokeAsync(batch)">
                                <i class="bi bi-eye"></i>
                            </button>
                            <button class="btn btn-sm btn-danger"
                                    @onclick="() => OnDelete.InvokeAsync(batch.BatchID)">
                                <i class="bi bi-trash"></i>
                            </button>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

@code {
    [Parameter] public List<Batch> Batches { get; set; }
    [Parameter] public EventCallback<Batch> OnEdit { get; set; }
    [Parameter] public EventCallback<Batch> OnDetails { get; set; }
    [Parameter] public EventCallback<int> OnDelete { get; set; }
}