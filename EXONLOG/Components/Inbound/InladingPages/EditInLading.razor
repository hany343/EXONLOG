@using Model.Inbound
@inject BatchService batchService
@inject TransCompanyService transCompanyService
@inject DriverService driverService
@inject TruckService truckService

<div class="modal fade show" style="display: block; background: rgba(0,0,0,0.5)">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit InLading</h5>
                <button type="button" class="btn-close" @onclick="CloseModal"></button>
            </div>
            <div class="modal-body">
                <EditForm Model="@InLading" OnValidSubmit="HandleSubmit">
                    <DataAnnotationsValidator />
                    <ValidationSummary class="text-danger" />

                    <div class="row g-3">
                        <!-- Batch Selection -->
                        <div class="col-md-6">
                            <label class="form-label">Batch *</label>
                            <InputSelect @bind-Value="@InLading.BatchID" class="form-control">
                                <option value="">Select Batch</option>
                                @foreach (var batch in batches)
                                {
                                    <option value="@batch.ID">@batch.BatchNumber</option>
                                }
                            </InputSelect>
                            <ValidationMessage For="@(() => InLading.BatchID)" />
                        </div>

                        <!-- Trans Company Selection -->
                        <div class="col-md-6">
                            <label class="form-label">Trans Company *</label>
                            <InputSelect @bind-Value="@InLading.TransCompanyID" class="form-control">
                                <option value="">Select Trans Company</option>
                                @foreach (var company in transCompanies)
                                {
                                    <option value="@company.TransCompanyID">@company.CompanyName</option>
                                }
                            </InputSelect>
                            <ValidationMessage For="@(() => InLading.TransCompanyID)" />
                        </div>

                        <!-- Driver Selection -->
                        <div class="col-md-6">
                            <label class="form-label">Driver *</label>
                            @if (currentDriver != null)
                            {
                                <div class="selected-item mb-2">
                                    Current: @currentDriver.DriverName (@currentDriver.NationalID)
                                </div>
                            }
                            <SearchDriver OnDriverSelected="HandleDriverSelected" />
                        </div>

                        <!-- Truck Selection -->
                        <div class="col-md-6">
                            <label class="form-label">Truck *</label>
                            @if (currentTruck != null)
                            {
                                <div class="selected-item mb-2">
                                    Current: @currentTruck.TruckNumber
                                </div>
                            }
                            <SearchTruck OnTruckSelected="HandleTruckSelected" />
                        </div>

                        <!-- Notes -->
                        <div class="col-12">
                            <label class="form-label">Notes</label>
                            <InputTextArea class="form-control" @bind-Value="@InLading.Notes" />
                        </div>

                        <!-- Buttons -->
                        <div class="col-12">
                            <button type="submit" class="btn btn-primary">Save Changes</button>
                            <button type="button" class="btn btn-secondary" @onclick="CloseModal">Cancel</button>
                        </div>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public InLading InLading { get; set; } = new();

    [Parameter]
    public EventCallback<bool> IsOpenChanged { get; set; }

    [Parameter]
    public EventCallback<InLading> OnSave { get; set; }

    private List<Batch> batches = new();
    private List<TransCompany> transCompanies = new();
    private Driver? currentDriver;
    private Truck? currentTruck;

    protected override async Task OnInitializedAsync()
    {
        batches = await batchService.GetBatchesAsync();
        transCompanies = await transCompanyService.GetAllAsync();

        // Load current driver/truck data
        if (InLading.DriverID > 0)
        {
            currentDriver = await driverService.GetDriverByIdAsync(InLading.DriverID);
        }
        if (InLading.TruckID > 0)
        {
            currentTruck = await truckService.GetTruckByIdAsync(InLading.TruckID);
        }
    }

    private void HandleDriverSelected(Driver driver)
    {
        currentDriver = driver;
        InLading.DriverID = driver.DriverID;
    }

    private void HandleTruckSelected(Truck truck)
    {
        currentTruck = truck;
        InLading.TruckID = truck.TruckID;
    }

    private async Task HandleSubmit()
    {
        await OnSave.InvokeAsync(InLading);
        CloseModal();
    }

    private void CloseModal()
    {
        IsOpenChanged.InvokeAsync(false);
    }
}