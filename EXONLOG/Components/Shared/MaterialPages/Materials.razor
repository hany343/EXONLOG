@page "/Materials"
@using EXONLOG.Model.Stocks
@using EXONLOG.Services
@inject MaterialService MaterialService
@inject MaterialTypeService MaterialTypeService
@rendermode InteractiveServer

<PageTitle>Material Management</PageTitle>

<div class="container mt-4">
    <!-- Header Section -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h3>Material Management</h3>
        <button class="btn btn-primary" @onclick="OpenCreateModal">
            @(showCreateModal ? "Cancel" : "+ New Material")
        </button>
    </div>

    <!-- Search and Filters -->
    <div class="mb-4">
        <input type="text" class="form-control" placeholder="Search materials..."
               @bind="searchTerm" @bind:event="oninput" />
    </div>

    <!-- Material Table -->
    <MaterialList Materials="filteredMaterials"
                  OnEdit="OpenEditModal"
                  OnDetails="OpenDetailsModal"
                  OnDelete="DeleteMaterial" />

    <!-- Create Modal -->
    @if (showCreateModal)
    {
        <CreateMaterial Material="selectedMaterial"
                        MaterialTypes="materialTypes"
                        @bind-IsOpen="showCreateModal"
                        OnSave="HandleCreateSubmit"
                        OnCancel="CloseModal" />
    }

    <!-- Edit Modal -->
    @if (showEditModal)
    {
        <EditMaterial Material="selectedMaterial"
                      MaterialTypes="materialTypes"
                      @bind-IsOpen="showEditModal"
                      OnSave="HandleEditSubmit"
                      OnCancel="CloseModal" />
    }

    <!-- Details Modal -->
    @if (showDetailsModal)
    {
        <MaterialDetails Material="selectedDetails"
                         @bind-IsOpen="showDetailsModal" />
    }

    <!-- Material Type Create Modal -->
    @if (showTypeCreateModal)
    {
        <MaterialTypeCreate @bind-IsOpen="showTypeCreateModal"
                            OnCreated="RefreshMaterialTypes" />
    }
</div>

@code {
    private List<Material> materials = new();
    private List<Material> filteredMaterials = new();
    private List<MaterialType> materialTypes = new();
    private string searchTerm = string.Empty;
    private bool showCreateModal;
    private bool showEditModal;
    private bool showDetailsModal;
    private bool showTypeCreateModal;
    private Material selectedMaterial = new();
    private Material selectedDetails = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        materials = await MaterialService.GetMaterialsWithQuantitiesAsync();
        materialTypes = await MaterialTypeService.GetMaterialTypesAsync();
        FilterMaterials();
    }

    private void FilterMaterials()
    {
        filteredMaterials = materials
            .Where(m => string.IsNullOrEmpty(searchTerm) ||
                m.MaterialName.Contains(searchTerm, StringComparison.OrdinalIgnoreCase) ||
                m.Description.Contains(searchTerm, StringComparison.OrdinalIgnoreCase))
            .ToList();
    }

    private void OpenCreateModal()
    {
        selectedMaterial = new Material();
        showCreateModal = true;
    }

    private void OpenEditModal(Material material)
    {
        selectedMaterial = material;
        showEditModal = true;
    }

    private void OpenDetailsModal(Material material)
    {
        selectedDetails = material;
        showDetailsModal = true;
    }

    private async Task HandleCreateSubmit(Material material)
    {
        await MaterialService.AddMaterialAsync(material);
        await LoadData();
        CloseModal();
    }

    private async Task HandleEditSubmit(Material material)
    {
        await MaterialService.UpdateMaterialAsync(material);
        await LoadData();
        CloseModal();
    }

    private async Task DeleteMaterial(int materialId)
    {
        await MaterialService.DeleteMaterialAsync(materialId);
        await LoadData();
    }

    private void CloseModal()
    {
        showCreateModal = false;
        showEditModal = false;
        showDetailsModal = false;
        selectedMaterial = new Material();
    }

    private async Task RefreshMaterialTypes()
    {
        materialTypes = await MaterialTypeService.GetMaterialTypesAsync();
        StateHasChanged();
    }
}