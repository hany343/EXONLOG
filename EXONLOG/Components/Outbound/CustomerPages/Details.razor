@page "/Customer/Details/{customerId:int}"
@using EXONLOG.Model.Outbound
@using EXONLOG.Data
@using Microsoft.EntityFrameworkCore
@inject NavigationManager Navigation
@inject EXONContext DbContext

<h3 class="text-primary">Customer Details</h3>

@if (isLoading)
{
    <p>Loading...</p>
}
else if (customer == null)
{
    <p class="text-danger">Customer not found.</p>
}
else
{
    <div class="card mb-3">
        <div class="card-header bg-primary text-white">Customer Information</div>
        <div class="card-body">
            <p><strong>Name:</strong> @customer.CustomerName</p>
            <p><strong>Address:</strong> @customer.Address</p>
            <p><strong>Contact Number:</strong> @customer.ContactNumber</p>
            <p><strong>Email:</strong> @customer.Email</p>
            <p><strong>Notes:</strong> @customer.Notes</p>
            <p><strong>Created By:</strong> @customer.User?.Username</p>
            <p><strong>Create Date:</strong> @customer.CreateDate.ToString("g")</p>
        </div>
    </div>

    <div class="card">
        <div class="card-header bg-info text-white">Contracts Summary</div>
        <div class="card-body">
            @if (contracts == null || !contracts.Any())
            {
                <p>No contracts found for this customer.</p>
            }
            else
            {
                <p><strong>Total Contracts:</strong> @contracts.Count</p>
                <p><strong>Total Material Quantity:</strong> @contracts.Sum(c => c.Quantity)</p>
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Contract Ref#</th>
                            <th>Material</th>
                            <th>Quantity</th>
                            <th>Start Date</th>
                            <th>Deadline</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var contract in contracts)
                        {
                            <tr>
                                <td>@contract.RefNumber</td>
                                <td>@contract.Material?.MaterialName</td>
                                <td>@contract.Quantity</td>
                                <td>@contract.StartDate.ToString()</td>
                                <td>@contract.Deadline.ToString()</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    </div>
}

<button class="btn btn-secondary mt-3" @onclick="NavigateBack">Back to Customers</button>

@code {
    [Parameter]
    public int customerId { get; set; }

    private Customer? customer;
    private List<Contract>? contracts;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            customer = await DbContext.Customers
                .Include(c => c.User) // Load related user
                .FirstOrDefaultAsync(c => c.CustomerID == customerId);

            if (customer != null)
            {
                contracts = await DbContext.Contracts
                    .Include(c => c.Material) // Load related material
                    .Where(c => c.CustomerID == customerId)
                    .ToListAsync();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading customer data: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

    private void NavigateBack()
    {
        Navigation.NavigateTo("/customers");
    }
}
