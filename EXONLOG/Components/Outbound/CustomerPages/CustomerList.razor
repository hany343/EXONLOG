@using Model.Outbound

<div class="table-responsive">
    <table class="table table-hover table-striped">
        <thead class="table-dark">
            <tr>
                <th>Customer ID</th>
                <th>Customer Name</th>
                <th>Contact Number</th>
                <th>Email</th>
                <th>Created Date</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (Customers == null)
            {
                <tr>
                    <td colspan="6" class="text-center">Loading customers...</td>
                </tr>
            }
            else if (!Customers.Any())
            {
                <tr>
                    <td colspan="6" class="text-center">No customers found.</td>
                </tr>
            }
            else
            {
                @foreach (var customer in Customers)
                {
                    <tr>
                        <td>@customer.CustomerID</td>
                        <td>@customer.CustomerName</td>
                        <td>@customer.ContactNumber</td>
                        <td>@customer.Email</td>
                        <td>@customer.CreateDate.ToString("dd MMM yyyy")</td>
                        <td>
                            <!-- Edit Button -->
                            <button class="btn btn-sm btn-warning me-2" @onclick="() => OnEdit.InvokeAsync(customer)">
                                <i class="bi bi-pencil"></i>
                            </button>

                            <!-- View Details Button -->
                            <button class="btn btn-sm btn-info me-2" @onclick="() => OnDetails.InvokeAsync(customer)">
                                <i class="bi bi-eye"></i>
                            </button>

                            <!-- Delete Button -->
                            <button class="btn btn-sm btn-danger" @onclick="() => OnDelete.InvokeAsync(customer.CustomerID)">
                                <i class="bi bi-trash"></i>
                            </button>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

@code {
    [Parameter]
    public List<Customer> Customers { get; set; }

    [Parameter]
    public EventCallback<Customer> OnEdit { get; set; }

    [Parameter]
    public EventCallback<Customer> OnDetails { get; set; }

    [Parameter]
    public EventCallback<int> OnDelete { get; set; }
}